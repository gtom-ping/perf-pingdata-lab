pipeline {
    
    agent {
        kubernetes {
            yamlFile 'jenkins/DataGovernance/KubernetesPod.yaml'
            defaultContainer 'jmeter'
        }
    }

    stages {
        stage('Configure JMeter') {
            steps {
                git branch: 'main', url: 'https://github.com/gtom-ping/perf-pingdata-lab'
                sh 'cp apache-jmeter/bin/* ${SERVER_BITS_DIR}/bin'
            }
        }

        stage('Wait for Product Availability') {
            when {
                expression {
                    httpRequest url: "https://pingdatagovernance:443/available-or-degraded-state", ignoreSslErrors: true
                }
            }
        }

        stage('Deny based on Access Token - Allow') {
            steps {
                sh '${SERVER_BITS_DIR}/bin/jmeter -n -f -t apache-jmeter/scripts/access-api.jmx -l access-api.csv -q apache-jmeter/scripts/test.properties'
                perfReport errorFailedThreshold: 0, errorUnstableThreshold: 0, compareBuildPrevious: true, configType: 'PRT', graphType: 'PRT', modePerformancePerTestCase: true, modeThroughput: true, sourceDataFiles: 'access-api.csv'
            }
        }

        stage('Deny based on Access Token - Deny') {
            steps {
                sh '${SERVER_BITS_DIR}/bin/jmeter -n -f -t apache-jmeter/scripts/deny-api.jmx -l deny-api.csv -q apache-jmeter/scripts/test.properties'
                perfReport errorFailedThreshold: 0, errorUnstableThreshold: 0, compareBuildPrevious: true, configType: 'PRT', graphType: 'PRT', modePerformancePerTestCase: true, modeThroughput: true, sourceDataFiles: 'deny-api.csv'
            }
        }
    }
}